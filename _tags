# OASIS_START
# DO NOT EDIT (digest: 0ae45e95502d954e7c03ba14f1cd86ea)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library async
"lib/async.cmxs": use_async
"lib/std.cmx": for-pack(Async)
<lib/*.ml{,i}>: package(async_core)
<lib/*.ml{,i}>: package(async_unix)
<lib/*.ml{,i}>: package(async_extra)
<lib/*.ml{,i}>: package(threads)
# Executable test_runner
<lib_test/test_runner.{native,byte}>: use_async
<lib_test/test_runner.{native,byte}>: package(oUnit)
<lib_test/test_runner.{native,byte}>: package(async_core)
<lib_test/test_runner.{native,byte}>: package(async_unix)
<lib_test/test_runner.{native,byte}>: package(async_extra)
<lib_test/test_runner.{native,byte}>: package(threads)
<lib_test/*.ml{,i}>: use_async
<lib_test/*.ml{,i}>: package(oUnit)
<lib_test/*.ml{,i}>: package(async_core)
<lib_test/*.ml{,i}>: package(async_unix)
<lib_test/*.ml{,i}>: package(async_extra)
<lib_test/*.ml{,i}>: package(threads)
<lib_test/test_runner.{native,byte}>: custom
# OASIS_STOP
# <lib_test/*.ml{,i}>: syntax_camlp4o
